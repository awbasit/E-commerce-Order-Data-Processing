name: Deploy Big Data Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ACCOUNT_ID: 025523568662

jobs:
  deploy:
    name: Build & Deploy Docker Images
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set Docker Tag
      id: vars
      run: echo "TAG=$(echo $GITHUB_SHA)" >> $GITHUB_ENV

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: docker-cache-${{ runner.os }}-${{ github.sha }}
        restore-keys: |
          docker-cache-${{ runner.os }}-

    - name: Build and Push Validator Image
      run: |
        docker build --no-cache -t validator -f validation/Dockerfile .
        docker tag validator:latest ${{ secrets.ECR_REPO_VALIDATOR }}:latest
        docker tag validator:latest ${{ secrets.ECR_REPO_VALIDATOR }}:${{ env.TAG }}
        docker push ${{ secrets.ECR_REPO_VALIDATOR }}:latest
        docker push ${{ secrets.ECR_REPO_VALIDATOR }}:${{ env.TAG }}
        docker inspect ${{ secrets.ECR_REPO_VALIDATOR }}:latest --format='Validator Digest: {{index .RepoDigests 0}}'

    - name: Build and Push Transformer Image
      run: |
        docker build --no-cache -t transformer -f transformation/Dockerfile .
        docker tag transformer:latest ${{ secrets.ECR_REPO_TRANSFORMER }}:latest
        docker tag transformer:latest ${{ secrets.ECR_REPO_TRANSFORMER }}:${{ env.TAG }}
        docker push ${{ secrets.ECR_REPO_TRANSFORMER }}:latest
        docker push ${{ secrets.ECR_REPO_TRANSFORMER }}:${{ env.TAG }}
        docker inspect ${{ secrets.ECR_REPO_TRANSFORMER }}:latest --format='Transformer Digest: {{index .RepoDigests 0}}'

    - name: Update ECS Services
      run: |
        aws ecs update-service --cluster validator_cluster \
          --service validator-service --force-new-deployment
        aws ecs update-service --cluster transformer_cluster \
          --service transformer-service --force-new-deployment

    
    - name: Prepare and zip Data Analyzer Lambda
      run: |
        cp infra/lambda_functions/data_size_analyzer.py lambda_function.py
        zip data_size_analyzer.zip lambda_function.py


    - name: Deploy Data Analyzer Lambda
      run: |
        aws lambda update-function-code \
          --function-name data_size_analyzer \
          --zip-file fileb://data_size_analyzer.zip


    - name: Zip cleanup Lambda function
      run: |
        cp infra/lambda_functions/CleanupLambda.py lambda_function.py
        zip CleanupLambda.zip lambda_function.py

    - name: Deploy cleanup Lambda
      run: |
        aws lambda update-function-code \
          --function-name CleanupLambda \
          --zip-file fileb://CleanupLambda.zip


    - name: Deploy Step Function
      run: |
        aws stepfunctions update-state-machine \
          --state-machine-arn ${{ secrets.STEP_FUNCTION_ARN }} \
          --definition file://infra/step_function/state_machine.json
