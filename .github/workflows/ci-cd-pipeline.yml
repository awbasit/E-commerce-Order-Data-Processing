name: Deploy Big Data Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ACCOUNT_ID: 025523568662

jobs:
  deploy:
    name: Build & Deploy Docker Images
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set Docker Tag
      id: vars
      run: echo "TAG=$(echo $GITHUB_SHA)" >> $GITHUB_ENV

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: docker-cache-${{ runner.os }}-${{ github.sha }}
        restore-keys: |
          docker-cache-${{ runner.os }}-

    - name: Build and Push Validator Image
      run: |
        docker build --no-cache -t validator -f validation/Dockerfile .
        docker tag validator:latest ${{ secrets.ECR_REPO_VALIDATOR }}:latest
        docker tag validator:latest ${{ secrets.ECR_REPO_VALIDATOR }}:${{ env.TAG }}
        docker push ${{ secrets.ECR_REPO_VALIDATOR }}:latest
        docker push ${{ secrets.ECR_REPO_VALIDATOR }}:${{ env.TAG }}
        docker inspect ${{ secrets.ECR_REPO_VALIDATOR }}:latest --format='Validator Digest: {{index .RepoDigests 0}}'

    - name: Build and Push Transformer Image
      run: |
        docker build --no-cache -t transformer -f transformation/Dockerfile .
        docker tag transformer:latest ${{ secrets.ECR_REPO_TRANSFORMER }}:latest
        docker tag transformer:latest ${{ secrets.ECR_REPO_TRANSFORMER }}:${{ env.TAG }}
        docker push ${{ secrets.ECR_REPO_TRANSFORMER }}:latest
        docker push ${{ secrets.ECR_REPO_TRANSFORMER }}:${{ env.TAG }}
        docker inspect ${{ secrets.ECR_REPO_TRANSFORMER }}:latest --format='Transformer Digest: {{index .RepoDigests 0}}'

    - name: Update ECS Services
      run: |
        aws ecs update-service --cluster your-cluster-name \
          --service validator-service --force-new-deployment
        aws ecs update-service --cluster your-cluster-name \
          --service transformer-service --force-new-deployment

    - name: Trigger Step Function Execution
      run: |
        aws stepfunctions start-execution \
          --state-machine-arn arn:aws:states:${{ env.AWS_REGION }}:${{ env.ACCOUNT_ID }}:stateMachine:YourStepFunctionName \
          --input '{"triggerType": "GitHubDeploy"}'

    - name: Notify via SNS (optional)
      if: always()
      run: |
        aws sns publish \
          --topic-arn arn:aws:sns:${{ env.AWS_REGION }}:${{ env.ACCOUNT_ID }}:DeployPipelineTopic \
          --message "Validator and Transformer images deployed from GitHub Actions with tag ${{ env.TAG }}" \
          --subject "Big Data Pipeline Deployed"
