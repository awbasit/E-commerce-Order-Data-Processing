services:
  # LocalStack for AWS services simulation
  localstack:
    container_name: localstack-main
    image: localstack/localstack:3.0
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - SERVICES=s3,dynamodb,ecs,stepfunctions,logs,events,iam,ecr
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=/tmp/localstack
    volumes:
      - "/tmp/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - pipeline-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Validation service
  validation-service:
    build:
      context: ./src/validation
      dockerfile: Dockerfile
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - ENVIRONMENT=local
      - PYTHONPATH=/app/src
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - pipeline-network
    volumes:
      - ./src:/app/src:ro

  # Transformation service
  transformation-service:
    build:
      context: ./src/transformation
      dockerfile: Dockerfile
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - ENVIRONMENT=local
      - PYTHONPATH=/app/src
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - pipeline-network
    volumes:
      - ./src:/app/src:ro

  # Test runner
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - ENVIRONMENT=local
      - PYTHONPATH=/app/src
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - pipeline-network
    volumes:
      - .:/app:ro
    command: ["pytest", "tests/", "-v", "--tb=short"]

  # Pipeline orchestrator for local testing
  pipeline-orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.orchestrator
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - ENVIRONMENT=local
      - PYTHONPATH=/app/src
    depends_on:
      localstack:
        condition: service_healthy
      validation-service:
        condition: service_started
      transformation-service:
        condition: service_started
    networks:
      - pipeline-network
    volumes:
      - .:/app:ro

networks:
  pipeline-network:
    driver: bridge

volumes:
  localstack-data: